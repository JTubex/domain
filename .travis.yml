language: php
dist: xenial
os: linux
sudo: required

services:
  - mysql
  - xvfb

jobs:
  fast_finish: true
  include:
    - env: DRUPAL_BRANCH="8.8.x" drupal" UPDATE_PHPUNIT="composer run-script drupal-phpunit-upgrade" MODULE_LIST="domain domain_access domain_alias domain_config domain_source"
      php: 7.3
   # - env: DRUPAL_BRANCH="8.9.x" drupal" UPDATE_PHPUNIT="composer run-script drupal-phpunit-upgrade" MODULE_LIST="domain domain_access domain_alias domain_config domain_source"
   #   php: 7.3

addons:
  hosts:
    - example.local
    - one.example.local
    - two.example.local
    - three.example.local
    - four.example.local
    - five.example.local
    - six.example.local
    - seven.example.local
    - eight.example.local
    - nine.example.local
    - ten.example.local
  chrome: stable

cache:
  directories:
    - $HOME/.composer/cache

env:
  global:
    # add composer's global bin directory to the path
    # see: https://github.com/drush-ops/drush#install---composer
    - PATH="$PATH:$HOME/.composer/vendor/bin"

notifications:
  email: false

before_install:
  # Remove Xdebug. Not an issue for PHP 7.
  - phpenv config-rm xdebug.ini || true

  - composer self-update

  # Install Drush.
  - composer global require --no-interaction drush/drush:8.*

  # Optimize MySQL timeout and max packet size.
  - echo "mysql.connect_timeout=3000" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - echo "default_socket_timeout=3000" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - mysql -e 'CREATE DATABASE IF NOT EXISTS domain CHARACTER SET utf8 COLLATE utf8_general_ci;'
  - mysql -e "SET GLOBAL wait_timeout = 36000;"
  - mysql -e "SET GLOBAL max_allowed_packet = 134209536;"

  # Get ipv6 running.
  - sudo sysctl -w net.ipv6.conf.all.disable_ipv6=0
  - sudo sysctl -w net.ipv6.conf.lo.disable_ipv6=0

before_script:
  # Install chromedriver
  - CHROME_MAIN_VERSION=`google-chrome-stable --version | sed -E 's/(^Google Chrome |\.[0-9]+ )//g'`
  - CHROMEDRIVER_VERSION=`curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAIN_VERSION"`
  - curl "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O
  - unzip chromedriver_linux64.zip -d ~/bin
  -
  # Remember the current rules test directory for later use in the Drupal installation.
  - TESTDIR=$(pwd)
  # Navigate out of module directory to prevent blown stack by recursive module lookup.
  - cd ..

  # Download Drupal 8 core.
  - git clone --depth=1 --branch $DRUPAL_BRANCH https://git.drupal.org/project/drupal.git
  - cd drupal

  # Update PHPUnit when needed (only 8.7).
  - $UPDATE_PHPUNIT

  # Install dependencies.
  - composer install

  # Make the module appear in the correct place
  - ln -s $TESTDIR modules/domain

  # Install drupal default profile
  - /usr/bin/env PHP_OPTIONS="-d sendmail_path=$(which true)" drush --yes --verbose site-install minimal --db-url=mysql://root:@127.0.0.1/domain
  - drush --yes en $MODULE_LIST
  - drush cr

  # Start a web server on port 8080 in the background.
  - nohup php -S 0.0.0.0:8080 > /dev/null 2>&1 &

  # Wait until the web server is responding.
  - until curl -s example.local:8080; do true; done > /dev/null

  # Export PHP Unit vars
  - export SIMPLETEST_DB='mysql://root:@127.0.0.1/domain'
  - export SIMPLETEST_BASE_URL='http://example.local:8080'
  - export SYMFONY_DEPRECATIONS_HELPER='disabled'
  - export MINK_DRIVER_ARGS_WEBDRIVER='["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless", "--no-sandbox", "--disable-dev-shm-usage"]}}, "http://example.local"]'
  # start your web application and listen on `localhost`
  - google-chrome-stable --no-sandbox --headless --dump-dom http://example.local &
  - chromedriver --no-sandbox --port=4444 --headless --disable-dev-shm-usage  &
  # Wait until the web driver is responding.
  - until curl -s example.local:4444; do true; done > /dev/null

script:
  #- vendor/bin/phpunit -c core --group domain_config_ui modules/domain -v
  - vendor/bin/phpunit -c core /home/travis/build/agentrickard/domain/domain_config_ui/tests/src/FunctionalJavascript/DomainConfigUISettingsTest.php --verbose
  - pkill chromedriver
